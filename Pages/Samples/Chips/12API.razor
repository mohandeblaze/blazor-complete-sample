@page "/Chips/12api"

<div class="col-lg-8 control-section sb-property-border">
    <div id="chip-api-wrapper">
        <EjsChipList ID="chip" CssClass="@($"{ChipColor} {(Outline ? "e-outline" : "")}")">
            <ChipCollection>
                <ChipListChip Text="Janet Leverling"
                              LeadingIconCss="@(LeadingIconCss ? "janet" : "")"
                              TrailingIconCss="@(TrailingIconCss ? "e-dlt-btn" : "")"
                              AvatarIconCss="@(AvatarIconCss == "icon" ? "e-icon" : (AvatarIconCss == "image" ? "janet" : ""))"
                              AvatarText="@(AvatarIconCss == "letter" ? "JL" : "")">
                </ChipListChip>
            </ChipCollection>
        </EjsChipList>
    </div>
</div>

<div class="col-lg-4 property-section">

    <div class="property-panel-section">
        <div class="property-panel-header">Properties</div><div class="property-panel-content">
            <table id="property" title="Properties" class="property-panel-table">
                <tbody>
                    <tr>
                        <td style="width: 50%">
                            <div class="userselect">Color</div>
                        </td>
                        <td style="width: 50%;padding-right: 10px">
                            <div>
                                <select @onchange="(e => { ChipColor = e.Value.ToString(); })">
                                    @foreach (var item in ColorData)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                </select>

                                @*<EjsDropDownList TValue="string" DataSource="@ColorData" Placeholder="Select a color">
                                    <DropDownListFieldSettings Text="Text" Value="Value"></DropDownListFieldSettings>
                                    <DropDownListEvents TValue="string" ValueChange=""></DropDownListEvents>
                                </EjsDropDownList>*@
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 50%">
                            <div class="userselect">Leading icon</div>
                        </td>
                        <td style="width: 50%;padding-right: 10px">
                            <div style="padding-left: 0;padding-top: 0">
                                <input type="checkbox" @onchange="(e => { LeadingIconCss = (bool)e.Value; })" />
                                @*<EjsCheckBox @onchange="@(e => { LeadingIconCss = (bool)e.Value; })"></EjsCheckBox>*@
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 50%">
                            <div class="userselect">Avatar</div>
                        </td>
                        <td style="width: 50%;padding-right: 10px">
                            <div>
                                <select @onchange="(e => { AvatarIconCss = e.Value.ToString(); })">
                                    @foreach (var item in AvatarData)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                </select>
                                @*<EjsDropDownList TValue="string" DataSource="@AvatarData" Placeholder="Select Avatar type">
                                    <DropDownListFieldSettings Text="Text" Value="Value"></DropDownListFieldSettings>
                                    <DropDownListEvents TValue="string" ValueChange="@(e => { AvatarIconCss = e.Value; })"></DropDownListEvents>
                                </EjsDropDownList>*@
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 50%">
                            <div class="userselect">Trailing icon</div>
                        </td>
                        <td style="width: 50%;padding-right: 10px">
                            <div style="padding-left: 0;padding-top: 0">
                                <input type="checkbox" @onchange="(e => { TrailingIconCss = (bool)e.Value; })" />
                                @*<EjsCheckBox @onchange="@(e => { TrailingIconCss = (bool)e.Value; })"></EjsCheckBox>*@
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 50%">
                            <div class="userselect">Outline</div>
                        </td>
                        <td style="width: 50%;padding-right: 10px">
                            <div style="padding-left: 0;padding-top: 0">
                                <input type="checkbox" @onchange="(e => { Outline = (bool)e.Value; })" />
                                @*<EjsCheckBox @onchange="@(e => { Outline = (bool)e.Value; })"></EjsCheckBox>*@
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

@code{
    string ChipColor = "";
    string AvatarIconCss = "";
    bool Outline = false;
    bool LeadingIconCss = false;
    bool TrailingIconCss = false;

    List<DropDownModel> ColorData = new List<DropDownModel> ()
    {
        new DropDownModel { Text = "Default", Value = "e-default" },
        new DropDownModel { Text = "Primary", Value = "e-primary" },
        new DropDownModel { Text = "Success", Value = "e-success" },
        new DropDownModel { Text = "Danger", Value = "e-danger" },
        new DropDownModel { Text = "Warning", Value = "e-warning" },
        new DropDownModel { Text = "Info", Value = "e-info" },
    };

    List<DropDownModel> AvatarData = new List<DropDownModel>()
    {
        new DropDownModel { Text = "None", Value = "none" },
        new DropDownModel { Text = "Icon", Value = "icon" },
        new DropDownModel { Text = "Image", Value = "image" },
        new DropDownModel { Text = "Letter", Value = "letter" },
    };

    class DropDownModel
    {
        public string Id { get; set; }
        public string Text { get; set; }
        public string Value { get; set; }
    }
}

<style>
    #chip-api-wrapper .janet {
        background-image: url('css/chips/images/janet.png');
    }

    #chip-api-wrapper {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 100px;
    }

    /* chips sample icons */

    #chip .e-chip-avatar.e-icon {
        font-family: 'e-user-icon';
    }

        #chip .e-chip-avatar.e-icon:before {
            content: "\e700";
        }

    @@font-face {
        font-family: 'e-user-icon';
        src: url(data:application/x-font-ttf;charset=utf-8;base64,AAEAAAAKAIAAAwAgT1MvMj0gSRgAAAEoAAAAVmNtYXDnEOdaAAABjAAAADhnbHlmiAnWagAAAcwAAADwaGVhZBD04psAAADQAAAANmhoZWEHiwNuAAAArAAAACRobXR4C9AAAAAAAYAAAAAMbG9jYQAwAHgAAAHEAAAACG1heHABDwA1AAABCAAAACBuYW1lby+ImAAAArwAAAIxcG9zdGUbI4AAAATwAAAAOwABAAADUv9qAFoEAAAAAAAD3QABAAAAAAAAAAAAAAAAAAAAAwABAAAAAQAAWW9ja18PPPUACwPoAAAAANb8zuYAAAAA1vzO5gAAAAAD3QPqAAAACAACAAAAAAAAAAEAAAADACkAAgAAAAAAAgAAAAoACgAAAP8AAAAAAAAAAQPwAZAABQAAAnoCvAAAAIwCegK8AAAB4AAxAQIAAAIABQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGZFZABA5wDnAQNS/2oAWgPqAJYAAAABAAAAAAAABAAAAAPoAAAD6AAAAAAAAgAAAAMAAAAUAAMAAQAAABQABAAkAAAABAAEAAEAAOcB//8AAOcA//8AAAABAAQAAAABAAIAAAAAADAAeAACAAAAAAO+A+oADQAZAAA3FBYXIT4BNS4BJyEOARMeARc+ATcuAScOAS4YFwMzFxgDq4H+zYGr4QOCY2KCAwOCYmGCnCtOISFOK3qiAwOiAe1igwICg2JjggICggAAAAACAAAAAAPdA+oAFAAoAAABDgEHIicjDgEHLgEnLgEnPgE3HgEFFBYfARYfATcXFhc2JDcmJCcGBAOkBfK3KioXEFcpBBEMRUsBBfK3tvL8cVRLDggBBsQKLDDPARMFBf7tz87+7QI+ndEEBwI/Izh2DS+RVZ3RBATRnWCmN3BIETecAgcBBPK1tfIEBPIAAAAAABIA3gABAAAAAAAAAAEAAAABAAAAAAABAAgAAQABAAAAAAACAAcACQABAAAAAAADAAgAEAABAAAAAAAEAAgAGAABAAAAAAAFAAsAIAABAAAAAAAGAAgAKwABAAAAAAAKACwAMwABAAAAAAALABIAXwADAAEECQAAAAIAcQADAAEECQABABAAcwADAAEECQACAA4AgwADAAEECQADABAAkQADAAEECQAEABAAoQADAAEECQAFABYAsQADAAEECQAGABAAxwADAAEECQAKAFgA1wADAAEECQALACQBLyBDb250YWN0c1JlZ3VsYXJDb250YWN0c0NvbnRhY3RzVmVyc2lvbiAxLjBDb250YWN0c0ZvbnQgZ2VuZXJhdGVkIHVzaW5nIFN5bmNmdXNpb24gTWV0cm8gU3R1ZGlvd3d3LnN5bmNmdXNpb24uY29tACAAQwBvAG4AdABhAGMAdABzAFIAZQBnAHUAbABhAHIAQwBvAG4AdABhAGMAdABzAEMAbwBuAHQAYQBjAHQAcwBWAGUAcgBzAGkAbwBuACAAMQAuADAAQwBvAG4AdABhAGMAdABzAEYAbwBuAHQAIABnAGUAbgBlAHIAYQB0AGUAZAAgAHUAcwBpAG4AZwAgAFMAeQBuAGMAZgB1AHMAaQBvAG4AIABNAGUAdAByAG8AIABTAHQAdQBkAGkAbwB3AHcAdwAuAHMAeQBuAGMAZgB1AHMAaQBvAG4ALgBjAG8AbQAAAAACAAAAAAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMBAgEDAQQABHVzZXIKY2hhdC0wMS13ZgAAAA==) format('truetype');
        font-weight: normal;
        font-style: normal;
    }
</style>
