@page "/listview/22Virtualization"
@using Model

<h4 class="sample-title">List Virtualization</h4>

<div style="display: flex;">
    <EjsListView ID="ui-list"
                 DataSource="@Data"
                 @ref="@NormalList"

                 Template="@Template"
                 EnableVirtualization="true"
                 CssClass="e-list-template"
                 HeaderTitle="Contacts"
                 Height="400"
                 ShowHeader="true">
        <ListViewFieldSettings Id="Id" Text="Name"></ListViewFieldSettings>
        <ListViewEvents TValue="ListDataModel" Selected="@((e) => OnSelect(e))"></ListViewEvents>
    </EjsListView>

    <EjsListView DataSource="@Data"
                 @ref="@CheckList"

                 ShowCheckBox="true"
                 EnableVirtualization="true"
                 HeaderTitle="Contacts"
                 Height="400"
                 ShowHeader="true">
        <ListViewFieldSettings Id="Id" Text="Name"></ListViewFieldSettings>
        <ListViewEvents TValue="ListDataModel" Selected="@((e) => OnSelect(e))"></ListViewEvents>
    </EjsListView>
</div>
<div>
    <h4>Current Selected item: <span id="selected-item">@selecteditem</span></h4>
</div>

<div style="display: flex;flex-wrap: wrap;justify-content: flex-start;">
    <div class="padding">
        <div class="bold">Normal List Selected item</div>
        @{
            @if (NormalListSelected != null)
            {
                @foreach (var itemValue in NormalListSelected)
                {
                    <div id="getselecteditem_content" class="italic">@(itemValue.Name)</div>
                }
            }
            else
            {
                <div id="getselecteditem_content" class="italic">Nothing Yet</div>
            }

        }

        <button id="getselecteditem" class="e-btn e-info" @onclick="GetSelectedItems">Get Selected items</button>
    </div>

    <div class="padding">
        <div class="bold">Check List Selected item</div>
        @{
            @if (CheckListSelected != null)
            {
                @foreach (var itemValue in CheckListSelected)
                {
                    <div id="getselecteditem_content" class="italic">@(itemValue.Name)</div>
                }
            }
            else
            {
                <div id="getselecteditem_content" class="italic">Nothing Yet</div>
            }

        }

    </div>
</div>


@code{
    List<ListDataModel> NormalListSelected;
    List<ListDataModel> CheckListSelected;

    EjsListView<ListDataModel> NormalList;
    EjsListView<ListDataModel> CheckList;

    string selecteditem = "null";

    string Template = "<div class='e-list-wrapper e-list-avatar'>" +
                 "<span id=\"${$ImgUrl ? \'hideUI\' : \'showUI\' }\" class='e-avatar e-avatar-circle' icon='${Icon}'> " +
            "${Icon}</span> <img id=\"${$ImgUrl ? \'showUI\' : \'hideUI\' }\" class='e-avatar e-avatar-circle' src=\"${$ImgUrl ?  $ImgUrl : \' \' }\" />" +
            "<span class='e-list-content'>${Name}</span></div>";

    List<ListDataModel> CommonData = new List<ListDataModel>();
    List<ListDataModel> Data = new List<ListDataModel>();


    void OnSelect(Syncfusion.EJ2.Blazor.Lists.SelectEventArgs<ListDataModel> selectEventArgs)
    {
        selecteditem = selectEventArgs.Data.Name;
    }

    async void GetSelectedItems()
    {
        ListSelectedItem<ListDataModel> item = await NormalList.GetSelectedItems();

        NormalListSelected = item.Data;

        item = await CheckList.GetSelectedItems();

        CheckListSelected = item.Data;

        this.StateHasChanged();
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        CommonData.Add(new ListDataModel { Name = "Nancy", ImgUrl = "", Icon = "N", Id = "0" });
        CommonData.Add(new ListDataModel { Name = "Andrew", ImgUrl = "", Icon = "A", Id = "1" });
        CommonData.Add(new ListDataModel { Name = "Janet", ImgUrl = "", Icon = "J", Id = "2" });
        CommonData.Add(new ListDataModel { Name = "Margaret", Icon = "", ImgUrl = "https://ej2.syncfusion.com/demos/src/listview/images/margaret.png", Id = "3" });
        CommonData.Add(new ListDataModel { Name = "Steven", ImgUrl = "", Icon = "S", Id = "4" });
        CommonData.Add(new ListDataModel { Name = "Laura", Icon = "", ImgUrl = "https://ej2.syncfusion.com/demos/src/listview/images/laura.png", Id = "5" });
        CommonData.Add(new ListDataModel { Name = "Robert", ImgUrl = "", Icon = "R", Id = "6" });
        CommonData.Add(new ListDataModel { Name = "Michael", ImgUrl = "", Icon = "M", Id = "7" });
        CommonData.Add(new ListDataModel { Name = "Albert", Icon = "", ImgUrl = "https://ej2.syncfusion.com/demos/src/listview/images/albert.png", Id = "8" });
        CommonData.Add(new ListDataModel { Name = "Nolan", ImgUrl = "", Icon = "N", Id = "9" });

        List<ListDataModel> generateData(int no)
        {
            int index = 0;
            int spyIndex = 0;
            List<ListDataModel> data = new List<ListDataModel>();
            for (int i = 0; i < no; i++)
            {
                while (index == spyIndex)
                {
                    index = new Random().Next(0, 10);
                }
                data.Add(new ListDataModel
                {
                    Name = CommonData[index].GetType().GetProperty("Name").GetValue(CommonData[index], null).ToString(),
                    Icon = CommonData[index].GetType().GetProperty("Icon").GetValue(CommonData[index], null).ToString(),
                    ImgUrl = CommonData[index].GetType().GetProperty("ImgUrl").GetValue(CommonData[index], null).ToString(),
                    Id = i.ToString()
                });
                spyIndex = index;
            }

            return data;
        }

        Data = generateData(1000);
    }
}

<style>

    /* ListView position alignment */

    div.e-listview {
        width: 325px;
        line-height: initial;
        border: 1px solid lightgray;
        display: inline-block;
    }

    /* ListView header alignment */

    #ui-list.e-listview .e-list-header {
        height: 50px
    }

        #ui-list.e-listview .e-list-header .e-text {
            line-height: 18px
        }

    /* ListView template customization */

    #ui-list.e-listview #showUI {
        display: flex;
    }

    #ui-list.e-listview #hideUI {
        display: none;
    }

    #ui-list.e-listview .e-list-item {
        padding: 3px 0;
    }

    #ui-list.e-listview [icon="R"] {
        background: lightgrey;
    }

    #ui-list.e-listview [icon="M"] {
        background: pink;
    }

    #ui-list.e-listview [icon="A"] {
        background: lightgreen;
    }

    #ui-list.e-listview [icon="S"] {
        background: lightskyblue;
    }

    #ui-list.e-listview [icon="J"] {
        background: orange;
    }

    #ui-list.e-listview [icon="N"] {
        background: lightblue;
    }

    /* ListView theme customization */

    .highcontrast #ui-list.e-listview .e-list-item,
    .highcontrast #ui-list.e-listview .e-list-header {
        background: rgb(0, 0, 0);
    }

        .highcontrast #ui-list.e-listview .e-list-item.e-active {
            background: #ffd939;
            color: #000000;
        }
</style>

<style>
    .padding {
        margin: 10px;
    }

        .padding * {
            margin: 5px 10px;
        }

    .e-listview {
        margin: 10px;
    }

    .bold {
        font-weight: bold;
    }

    .italic {
        font-style: italic;
    }
</style>
