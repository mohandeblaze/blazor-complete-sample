@page "/slider/17propertybinding"

<h4 class="sample-title">Property Binding</h4>

<div class="control_section">
    <div class="control_wrapper">
        <EjsSlider @bind-Value="@Value">
            <SliderTicksData Placement="@TicksPlacement" ShowSmallTicks="true" LargeStep="20" SmallStep="20"></SliderTicksData>
            <SliderLimitData Enabled="@LimitsEnabled" MinStart="10" MinEnd="40" MaxStart="60" MaxEnd="90"></SliderLimitData>
            <SliderTooltipData IsVisible="@TooltipEnabled" Placement="TooltipPlacement.Before"></SliderTooltipData>
        </EjsSlider>
    </div>

    <br />

    <div class="sample-title">Current Slider Value @Value</div>

    <div style="display: flex;flex-wrap: wrap;justify-content: flex-start;">
        <div class="padding">
            <div class="bold">Update value</div>
            <div class="italic">@Value</div>
            <button class="e-btn e-info" @onclick="@UpdateValue">UpdateValue</button>
        </div>

        <div class="padding">
            <div class="bold">ToggleLimits</div>
            <div class="italic">@LimitsEnabled</div>
            <button class="e-btn e-info" @onclick="@ToggleLimits">ToggleLimits</button>
        </div>

        <div class="padding">
            <div class="bold">ToggleTicks</div>
            <div class="italic">@TicksEnabled</div>
            <button class="e-btn e-info" @onclick="@ToggleTicks">ToggleTicks</button>
        </div>

        <div class="padding">
            <div class="bold">ToggleTooltip</div>
            <div class="italic">@TooltipEnabled</div>
            <button class="e-btn e-info" @onclick="@ToggleTooltip">ToggleTooltip</button>
        </div>
    </div>
</div>

@code {
    object Value = 60;
    bool LimitsEnabled = true;
    bool TooltipEnabled = true;
    bool TicksEnabled = true;
    Placement TicksPlacement = Placement.After;

    void UpdateValue()
    {
        Value = 30;
    }

    void ToggleTooltip()
    {
        TooltipEnabled = !TooltipEnabled;
    }

    void ToggleLimits()
    {
        LimitsEnabled = !LimitsEnabled;
    }

    void ToggleTicks()
    {
        TicksEnabled = !TicksEnabled;
        TicksPlacement = TicksEnabled ? Placement.After : Placement.None;
    }
}

<style>

    .control_wrapper {
        padding: 10px;
        /*width: 250px;*/
        overflow: hidden;
    }

    .control_section {
        display: flex;
        flex-direction: column;
    }

    .padding {
        margin: 10px;
    }

        .padding * {
            margin: 5px 10px;
        }


    .bold {
        font-weight: bold;
    }

    .italic {
        font-style: italic;
    }
</style>
