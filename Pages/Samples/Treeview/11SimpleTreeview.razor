@page "/Treeview/11SimpleTreeview"

<div class="control-section">
    <div class="control_wrapper">
        <EjsTreeView id="treedata">
            <TreeViewFieldsSettings DataSource="@parentitem" Id="nodeId" ParentID="pid" Text="nodeText" HasChildren="hasChild" Expanded="expanded" Child="@child"></TreeViewFieldsSettings>
        </EjsTreeView>
    </div>
</div>

@code{
    object child;
    List<Parentitem> parentitem = new List<Parentitem>();
    List<Childitem> childitem1 = new List<Childitem>();
    List<Childitem> childitem2 = new List<Childitem>();
    List<Childitem> childitem3 = new List<Childitem>();
    List<SubChilditem> subchilditem1 = new List<SubChilditem>();
    List<SubChilditem> subchilditem2 = new List<SubChilditem>();
    List<SubChilditem> subchilditem3 = new List<SubChilditem>();
    List<SubChilditem> subchilditem4 = new List<SubChilditem>();
    List<SubChilditem> subchilditem5 = new List<SubChilditem>();
    List<SubChilditem> subchilditem6 = new List<SubChilditem>();
    List<SubChilditem> subchilditem7 = new List<SubChilditem>();
    List<SubChilditem> subchilditem8 = new List<SubChilditem>();
    List<SubChilditem> subchilditem9 = new List<SubChilditem>();

    protected override void OnInit()
    {
        base.OnInit();
        this.parentitem.Add(new Parentitem
        {
            nodeId = "01",
            nodeText = "Local Disk (C:)",
            expanded = true,
            child = childitem1,
        });
        this.childitem1.Add(new Childitem { nodeId = "01-01", nodeText = "Program Files", child = subchilditem1 });
        this.subchilditem1.Add(new SubChilditem { nodeId = "01-01-01", nodeText = "Windows NT" });
        this.subchilditem1.Add(new SubChilditem { nodeId = "01-01-02", nodeText = "Windows Mail" });
        this.subchilditem1.Add(new SubChilditem { nodeId = "01-01-03", nodeText = "Windows Photo Viewer" });
        this.childitem1.Add(new Childitem { nodeId = "01-02", nodeText = "Users", expanded = true, child = subchilditem2 });
        this.subchilditem2.Add(new SubChilditem { nodeId = "01-02-01", nodeText = "Smith" });
        this.subchilditem2.Add(new SubChilditem { nodeId = "01-02-02", nodeText = "Public" });
        this.subchilditem2.Add(new SubChilditem { nodeId = "01-02-03", nodeText = "Admin" });
        this.childitem1.Add(new Childitem { nodeId = "01-03", nodeText = "Windows", child = subchilditem3 });
        this.subchilditem3.Add(new SubChilditem { nodeId = "01-03-01", nodeText = "Boot" });
        this.subchilditem3.Add(new SubChilditem { nodeId = "01-03-02", nodeText = "FileManager" });
        this.subchilditem3.Add(new SubChilditem { nodeId = "01-03-03", nodeText = "System32" });

        this.parentitem.Add(new Parentitem
        {
            nodeId = "02",
            nodeText = "Local Disk (D:)",
            child = childitem2,
        });
        this.childitem2.Add(new Childitem { nodeId = "02-01", nodeText = "Personals", child = subchilditem4 });
        this.subchilditem4.Add(new SubChilditem { nodeId = "02-01-01", nodeText = "My photo.png" });
        this.subchilditem4.Add(new SubChilditem { nodeId = "02-01-02", nodeText = "Rental document.docx" });
        this.subchilditem4.Add(new SubChilditem { nodeId = "02-01-03", nodeText = "Pay slip.pdf" });
        this.childitem2.Add(new Childitem { nodeId = "02-02", nodeText = "Projects", child = subchilditem5 });
        this.subchilditem5.Add(new SubChilditem { nodeId = "02-02-01", nodeText = "ASP Application " });
        this.subchilditem5.Add(new SubChilditem { nodeId = "02-02-02", nodeText = "TypeScript Application" });
        this.subchilditem5.Add(new SubChilditem { nodeId = "02-02-03", nodeText = "React Application" });
        this.childitem2.Add(new Childitem { nodeId = "02-02", nodeText = "Office", child = subchilditem6 });
        this.subchilditem6.Add(new SubChilditem { nodeId = "02-03-01", nodeText = "Work details.docx " });
        this.subchilditem6.Add(new SubChilditem { nodeId = "02-03-02", nodeText = "Weekly report.docx" });
        this.subchilditem6.Add(new SubChilditem { nodeId = "02-03-03", nodeText = "Wish list.csv" });

        this.parentitem.Add(new Parentitem
        {
            nodeId = "03",
            nodeText = "Local Disk (E:)",
            child = childitem3,
        });
        this.childitem3.Add(new Childitem { nodeId = "03-01", nodeText = "Pictures", child = subchilditem7 });
        this.subchilditem7.Add(new SubChilditem { nodeId = "03-01-01", nodeText = "Wind.jpg " });
        this.subchilditem7.Add(new SubChilditem { nodeId = "03-01-02", nodeText = "Stone.jpg" });
        this.subchilditem7.Add(new SubChilditem { nodeId = "03-01-03", nodeText = "Home.jpg" });
        this.childitem3.Add(new Childitem { nodeId = "03-02", nodeText = "Documents", icon = "docx", child = subchilditem8 });
        this.subchilditem8.Add(new SubChilditem { nodeId = "03-02-01", nodeText = "Environment Pollution.docx " });
        this.subchilditem8.Add(new SubChilditem { nodeId = "03-02-02", nodeText = "Global Warming.ppt" });
        this.subchilditem8.Add(new SubChilditem { nodeId = "03-02-03", nodeText = "Social Network.pdf" });
        this.childitem3.Add(new Childitem { nodeId = "03-03", nodeText = "Study Materials", child = subchilditem9 });
        this.subchilditem9.Add(new SubChilditem { nodeId = "03-03-01", nodeText = "UI-Guide.pdf" });
        this.subchilditem9.Add(new SubChilditem { nodeId = "03-03-02", nodeText = "Tutorials.zip" });
        this.subchilditem9.Add(new SubChilditem { nodeId = "03-03-03", nodeText = "TypeScript.7z" });
        this.child = "child";
    }
    public class Parentitem
    {
        public string nodeId { get; set; }
        public string nodeText { get; set; }
        public string icon { get; set; }
        public bool expanded { get; set; }
        public bool selected { get; set; }
        public List<Childitem> child;

    }
    public class Childitem
    {
        public string nodeId { get; set; }
        public string nodeText { get; set; }
        public string icon { get; set; }
        public bool expanded { get; set; }
        public bool selected { get; set; }
        public List<SubChilditem> child;

    }
    public class SubChilditem
    {
        public string nodeId { get; set; }
        public string nodeText { get; set; }
        public string icon { get; set; }
        public bool expanded { get; set; }
        public bool selected { get; set; }

    }
}

<style>

    .control_wrapper {
        max-width: 500px;
        margin: auto;
        border: 1px solid #dddddd;
        border-radius: 3px;
    }
</style>
